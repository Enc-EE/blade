!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var o=function(){function e(){var e=this;this.animations=[],this.updates=[],this.addAnimation=function(t){e.animations.push(t)},this.removeAnimation=function(t){e.animations.splice(e.animations.indexOf(t),1)},this.addUpdate=function(t){e.updates.push(t)},this.removeUpdate=function(t){e.updates.splice(e.updates.indexOf(t),1)},this.addAnimatable=function(t){e.updates.push(t.update),e.animations.push(t.draw)},this.removeAnimatable=function(t){e.updates.splice(e.updates.indexOf(t.update),1),e.animations.splice(e.animations.indexOf(t.draw),1)},this.fps=40,this.fpsInterval=1e3/this.fps,this.animate=function(){requestAnimationFrame(e.animate);var t=Date.now(),n=t-e.lastFrameTime;if(n>e.fpsInterval){e.lastFrameTime=t;for(var o=0,i=e.updates;o<i.length;o++){(0,i[o])(n)}e.ctx.clearRect(0,0,e.canvas.width,e.canvas.height);for(var r=0,a=e.animations;r<a.length;r++){(0,a[r])(e.ctx,e.canvas.width,e.canvas.height)}}}}return Object.defineProperty(e.prototype,"width",{get:function(){return this.canvas.width},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"height",{get:function(){return this.canvas.height},enumerable:!0,configurable:!0}),e.createInBody=function(){document.body.parentElement.style.height="100%",document.body.style.height="100%",document.body.style.margin="0",document.body.style.overflow="hidden";var t=document.createElement("canvas");document.body.appendChild(t),t.style.width="100%",t.style.height="100%";var n=new e;return n.canvas=t,n.ctx=t.getContext("2d"),n.startAnimation(),n.resize(),n},e.prototype.resize=function(){this.canvas.width=this.canvas.clientWidth,this.canvas.height=this.canvas.clientHeight},e.prototype.startAnimation=function(){this.lastFrameTime=Date.now(),this.animate()},e}(),i=function(){return function(e,t,n,o,i){var r=this;this.name=e,this.xAxes=0,this.yAxes=0,document.addEventListener("keydown",function(e){e.keyCode==t&&(r.xAxes=-1),e.keyCode==n&&(r.yAxes=-1),e.keyCode==o&&(r.xAxes=1),e.keyCode==i&&(r.yAxes=1)}),document.addEventListener("keyup",function(e){e.keyCode==t&&(r.xAxes=-1)&&(r.xAxes=0),e.keyCode==n&&(r.yAxes=-1)&&(r.yAxes=0),e.keyCode==o&&(r.xAxes=1)&&(r.xAxes=0),e.keyCode==i&&(r.yAxes=1)&&(r.yAxes=0)})}}(),r=function(){function e(e,t){this.name=e,this.index=t}return Object.defineProperty(e.prototype,"xAxes",{get:function(){return navigator.getGamepads()[this.index].axes[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"yAxes",{get:function(){return navigator.getGamepads()[this.index].axes[1]},enumerable:!0,configurable:!0}),e}(),a=function(){function e(e,t,n){var o=this;this.controller=e,this.onAdd=t,this.onRemove=n,this.isShown=!1,this.isAdded=!1,this.addTimerSeconds=2,this.rememberedX=0,this.rememberedY=0,this.update=function(e){o.isShown?o.isAdded?(o.angle=o.angle+Math.PI/9,o.angle=o.angle%(2*Math.PI),o.x=o.rememberedX+25*o.controller.xAxes,o.y=o.rememberedY+25*o.controller.yAxes,o.controller.yAxes>.3?(o.addTimer+=o.controller.yAxes*e/1e3,o.addTimer>=o.addTimerSeconds&&(o.addTimer=0,o.isShown=!1,o.isAdded=!1,o.onRemove(o))):o.controller.yAxes<.1&&(o.addTimer=0)):o.controller.yAxes<-.3?(o.addTimer-=o.controller.yAxes*e/1e3,o.addTimer>=o.addTimerSeconds&&(o.isAdded=!0,o.addTimer=0)):o.controller.yAxes>-.1&&(o.addTimer=0,o.isShown=!1,o.onRemove(o)):o.controller.yAxes<-.3&&(o.isShown=!0,o.addTimer-=o.controller.yAxes*e/1e3,o.onAdd(o),o.rememberedX=o.x,o.rememberedY=o.y)},this.draw=function(e,t,n){e.fillStyle=o.color,e.save(),e.translate(o.x,o.y),o.isAdded&&(e.save(),e.rotate(o.angle),e.fillRect(-25,-25,50,50),e.restore()),o.isShown&&!o.isAdded&&e.fillRect(-25,35,50/o.addTimerSeconds*o.addTimer,10),o.isShown&&o.isAdded&&o.addTimer>0&&e.fillRect(-25,35,50-50/o.addTimerSeconds*o.addTimer,10),e.restore()},this.color="black",this.x=0,this.y=0,this.angle=0,this.addTimer=0}return Object.defineProperty(e.prototype,"controllerName",{get:function(){return this.controller.name},enumerable:!0,configurable:!0}),e}(),d="ongamepadconnected"in window,s=function(){function e(){var e=this;this.isPlayerSelection=!0,this.controllerNames=[],this.controllers=[],this.addController=function(t){if(console.log("added controller "+t.controllerName),e.controllerNames.length<=4){e.controllerNames.push(t.controllerName);var n="black",o=0,i=0;switch(e.controllerNames.length){case 1:n="red",o=e.animation.width/3,i=(e.animation.height-100)/3+100;break;case 2:n="green",o=e.animation.width/3*2,i=(e.animation.height-100)/3+100;break;case 3:n="blue",o=e.animation.width/3,i=(e.animation.height-100)/3*2+100;break;case 4:n="orange",o=e.animation.width/3*2,i=(e.animation.height-100)/3*2+100}t.color=n,t.x=o,t.y=i}else console.log("Sorry, only 4 controllers supported")},this.removeController=function(t){console.log("removed controller "+t.controllerName),e.controllerNames.splice(e.controllerNames.indexOf(t.controllerName),1)},this.connecthandler=function(t){e.addgamepad(t.gamepad)},this.scangamepads=function(){for(var t=navigator.getGamepads?navigator.getGamepads():[],n=0;n<t.length;n++)t[n]&&(t[n].index in e.controllers?e.controllers[t[n].index]=t[n]:e.addgamepad(t[n]))},this.disconnecthandler=function(t){e.removegamepad(t.gamepad)},this.removegamepad=function(t){delete e.controllers[t.index]},this.addgamepad=function(t){var n=new a(new r(t.index.toString(),t.index),e.addController,e.removeController);e.animation.addAnimatable(n),e.controllers[t.index]=t}}return e.prototype.run=function(){if(this.animation=o.createInBody(),this.isPlayerSelection){this.animation.addAnimation(function(e,t,n){e.fillStyle="black",e.textAlign="center",e.font="22px sans-serif",e.fillText("You can control a blade with a gamepad, the arrow keys or WASD.",t/2,50),e.fillText("Press up to join and down to leave.",t/2,80),e.fillText("Press enter on keyboard or start on a controller to start.",t/2,110)});var e=new a(new i("arrows",37,38,39,40),this.addController,this.removeController);this.animation.addAnimatable(e);var t=new a(new i("wasd",65,87,68,83),this.addController,this.removeController);this.animation.addAnimatable(t)}window.addEventListener("gamepadconnected",this.connecthandler),window.addEventListener("gamepaddisconnected",this.disconnecthandler),d||setInterval(this.scangamepads,500)},e}();document.addEventListener("DOMContentLoaded",function(){(new s).run()},!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,