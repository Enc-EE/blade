!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var o=function(){function e(){var e=this;this.animatables=[],this.fps=40,this.fpsInterval=1e3/this.fps,this.animate=function(){requestAnimationFrame(e.animate);var t=Date.now(),n=t-e.lastFrameTime;if(n>e.fpsInterval){e.lastFrameTime=t;for(var o=0,i=e.animatables;o<i.length;o++){i[o].update(n)}e.ctx.clearRect(0,0,e.canvas.width,e.canvas.height);for(var a=0,r=e.animatables;a<r.length;a++){r[a].draw(e.ctx,e.canvas.width,e.canvas.height)}}}}return e.createInBody=function(){document.body.parentElement.style.height="100%",document.body.style.height="100%",document.body.style.margin="0",document.body.style.overflow="hidden";var t=document.createElement("canvas");document.body.appendChild(t),t.style.width="100%",t.style.height="100%";var n=new e;return n.canvas=t,n.ctx=t.getContext("2d"),n.startAnimation(),n.resize(),n},e.prototype.resize=function(){this.canvas.width=this.canvas.clientWidth,this.canvas.height=this.canvas.clientHeight},e.prototype.startAnimation=function(){this.lastFrameTime=Date.now(),this.animate()},e}(),i=function(){return function(){var e=this;this.update=function(t){e.angle=e.angle+Math.PI/9,e.angle=e.angle%(2*Math.PI),e.vx+=-e.moveLeft+e.moveRight,e.vy+=-e.moveUp+e.moveDown,e.x+=e.vx,e.y+=e.vy},this.draw=function(t,n,o){t.fillStyle="black",t.save(),t.translate(e.x,e.y),t.rotate(e.angle),t.fillRect(-25,-25,50,50),t.restore()},this.x=0,this.y=0,this.vx=0,this.vy=0,this.angle=0,this.moveDown=0,this.moveRight=0,this.moveUp=0,this.moveLeft=0,document.addEventListener("keydown",function(t){t.key,37==t.keyCode&&(e.moveLeft=1),38==t.keyCode&&(e.moveUp=1),39==t.keyCode&&(e.moveRight=1),40==t.keyCode&&(e.moveDown=1)}),document.addEventListener("keyup",function(t){t.key,37==t.keyCode&&(e.moveLeft=0),38==t.keyCode&&(e.moveUp=0),39==t.keyCode&&(e.moveRight=0),40==t.keyCode&&(e.moveDown=0)})}}(),a=function(){function e(){}return e.prototype.run=function(){var e=o.createInBody(),t=new i;e.animatables.push(t)},e}();document.addEventListener("DOMContentLoaded",function(){(new a).run()},!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,